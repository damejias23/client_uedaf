/*
Nuedaf_EventExposure

UEDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uedaf

import (
	"encoding/json"
)

// UedafCreateEventSubscription Data within a create UEDAF event subscription request
type UedafCreateEventSubscription struct {
	Subscription UedafEventSubscription `json:"subscription"`
}

// NewUedafCreateEventSubscription instantiates a new UedafCreateEventSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUedafCreateEventSubscription(subscription UedafEventSubscription) *UedafCreateEventSubscription {
	this := UedafCreateEventSubscription{}
	this.Subscription = subscription
	return &this
}

// NewUedafCreateEventSubscriptionWithDefaults instantiates a new UedafCreateEventSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUedafCreateEventSubscriptionWithDefaults() *UedafCreateEventSubscription {
	this := UedafCreateEventSubscription{}
	return &this
}

// GetSubscription returns the Subscription field value
func (o *UedafCreateEventSubscription) GetSubscription() UedafEventSubscription {
	if o == nil {
		var ret UedafEventSubscription
		return ret
	}

	return o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value
// and a boolean to check if the value has been set.
func (o *UedafCreateEventSubscription) GetSubscriptionOk() (*UedafEventSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscription, true
}

// SetSubscription sets field value
func (o *UedafCreateEventSubscription) SetSubscription(v UedafEventSubscription) {
	o.Subscription = v
}

func (o UedafCreateEventSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscription"] = o.Subscription
	}
	return json.Marshal(toSerialize)
}

type NullableUedafCreateEventSubscription struct {
	value *UedafCreateEventSubscription
	isSet bool
}

func (v NullableUedafCreateEventSubscription) Get() *UedafCreateEventSubscription {
	return v.value
}

func (v *NullableUedafCreateEventSubscription) Set(val *UedafCreateEventSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableUedafCreateEventSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableUedafCreateEventSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUedafCreateEventSubscription(val *UedafCreateEventSubscription) *NullableUedafCreateEventSubscription {
	return &NullableUedafCreateEventSubscription{value: val, isSet: true}
}

func (v NullableUedafCreateEventSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUedafCreateEventSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


