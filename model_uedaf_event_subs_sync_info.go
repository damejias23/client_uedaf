/*
Nuedaf_EventExposure

UEDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uedaf

import (
	"encoding/json"
)

// UedafEventSubsSyncInfo UEDAF Event Subscriptions Information for synchronization
type UedafEventSubsSyncInfo struct {
	SubscriptionInfo UedafEventSubscriptionInfo `json:"subscriptionInfo"`
}

// NewUedafEventSubsSyncInfo instantiates a new UedafEventSubsSyncInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUedafEventSubsSyncInfo(subscriptionInfo UedafEventSubscriptionInfo) *UedafEventSubsSyncInfo {
	this := UedafEventSubsSyncInfo{}
	this.SubscriptionInfo = subscriptionInfo
	return &this
}

// NewUedafEventSubsSyncInfoWithDefaults instantiates a new UedafEventSubsSyncInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUedafEventSubsSyncInfoWithDefaults() *UedafEventSubsSyncInfo {
	this := UedafEventSubsSyncInfo{}
	return &this
}

// GetSubscriptionInfo returns the SubscriptionInfo field value
func (o *UedafEventSubsSyncInfo) GetSubscriptionInfo() UedafEventSubscriptionInfo {
	if o == nil {
		var ret UedafEventSubscriptionInfo
		return ret
	}

	return o.SubscriptionInfo
}

// GetSubscriptionInfoOk returns a tuple with the SubscriptionInfo field value
// and a boolean to check if the value has been set.
func (o *UedafEventSubsSyncInfo) GetSubscriptionInfoOk() (*UedafEventSubscriptionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionInfo, true
}

// SetSubscriptionInfo sets field value
func (o *UedafEventSubsSyncInfo) SetSubscriptionInfo(v UedafEventSubscriptionInfo) {
	o.SubscriptionInfo = v
}

func (o UedafEventSubsSyncInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscriptionInfo"] = o.SubscriptionInfo
	}
	return json.Marshal(toSerialize)
}

type NullableUedafEventSubsSyncInfo struct {
	value *UedafEventSubsSyncInfo
	isSet bool
}

func (v NullableUedafEventSubsSyncInfo) Get() *UedafEventSubsSyncInfo {
	return v.value
}

func (v *NullableUedafEventSubsSyncInfo) Set(val *UedafEventSubsSyncInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUedafEventSubsSyncInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUedafEventSubsSyncInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUedafEventSubsSyncInfo(val *UedafEventSubsSyncInfo) *NullableUedafEventSubsSyncInfo {
	return &NullableUedafEventSubsSyncInfo{value: val, isSet: true}
}

func (v NullableUedafEventSubsSyncInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUedafEventSubsSyncInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


