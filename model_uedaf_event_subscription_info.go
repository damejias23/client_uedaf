/*
Nuedaf_EventExposure

UEDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uedaf

import (
	"encoding/json"
)

// UedafEventSubscriptionInfo Individual UEDAF Event Subscription Information
type UedafEventSubscriptionInfo struct {
	// String providing an URI formatted according to RFC 3986.
	SubId string `json:"subId"`
	// String providing an URI formatted according to RFC 3986.
	OldSubId *string `json:"oldSubId,omitempty"`
}

// NewUedafEventSubscriptionInfo instantiates a new UedafEventSubscriptionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUedafEventSubscriptionInfo(subId string) *UedafEventSubscriptionInfo {
	this := UedafEventSubscriptionInfo{}
	this.SubId = subId
	return &this
}

// NewUedafEventSubscriptionInfoWithDefaults instantiates a new UedafEventSubscriptionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUedafEventSubscriptionInfoWithDefaults() *UedafEventSubscriptionInfo {
	this := UedafEventSubscriptionInfo{}
	return &this
}

// GetSubId returns the SubId field value
func (o *UedafEventSubscriptionInfo) GetSubId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubId
}

// GetSubIdOk returns a tuple with the SubId field value
// and a boolean to check if the value has been set.
func (o *UedafEventSubscriptionInfo) GetSubIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubId, true
}

// SetSubId sets field value
func (o *UedafEventSubscriptionInfo) SetSubId(v string) {
	o.SubId = v
}

// GetOldSubId returns the OldSubId field value if set, zero value otherwise.
func (o *UedafEventSubscriptionInfo) GetOldSubId() string {
	if o == nil || o.OldSubId == nil {
		var ret string
		return ret
	}
	return *o.OldSubId
}

// GetOldSubIdOk returns a tuple with the OldSubId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UedafEventSubscriptionInfo) GetOldSubIdOk() (*string, bool) {
	if o == nil || o.OldSubId == nil {
		return nil, false
	}
	return o.OldSubId, true
}

// HasOldSubId returns a boolean if a field has been set.
func (o *UedafEventSubscriptionInfo) HasOldSubId() bool {
	if o != nil && o.OldSubId != nil {
		return true
	}

	return false
}

// SetOldSubId gets a reference to the given string and assigns it to the OldSubId field.
func (o *UedafEventSubscriptionInfo) SetOldSubId(v string) {
	o.OldSubId = &v
}

func (o UedafEventSubscriptionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subId"] = o.SubId
	}
	if o.OldSubId != nil {
		toSerialize["oldSubId"] = o.OldSubId
	}
	return json.Marshal(toSerialize)
}

type NullableUedafEventSubscriptionInfo struct {
	value *UedafEventSubscriptionInfo
	isSet bool
}

func (v NullableUedafEventSubscriptionInfo) Get() *UedafEventSubscriptionInfo {
	return v.value
}

func (v *NullableUedafEventSubscriptionInfo) Set(val *UedafEventSubscriptionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUedafEventSubscriptionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUedafEventSubscriptionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUedafEventSubscriptionInfo(val *UedafEventSubscriptionInfo) *NullableUedafEventSubscriptionInfo {
	return &NullableUedafEventSubscriptionInfo{value: val, isSet: true}
}

func (v NullableUedafEventSubscriptionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUedafEventSubscriptionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


